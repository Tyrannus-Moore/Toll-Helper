// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `Update.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//


using _System = global::System;
using _Microsoft = global::Microsoft;

#pragma warning disable 1591

namespace ASSISTUPDATEMODULEICE
{
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial class ResourceItem : _System.ICloneable
    {
        #region Slice data members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public string resourceFolderName;////发布资源文件夹名称yyyyMMddHHmmss

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public string resourcePath;////详细资源路径,这里并不包含上级资源文件夹(Resource)路径

        #endregion

        #region Constructors

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public ResourceItem()
        {
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public ResourceItem(string resourceFolderName, string resourcePath)
        {
            this.resourceFolderName = resourceFolderName;
            this.resourcePath = resourcePath;
        }

        #endregion

        #region ICloneable members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public object Clone()
        {
            return MemberwiseClone();
        }

        #endregion

        #region Object members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override int GetHashCode()
        {
            int h__ = 0;
            if(resourceFolderName != null)
            {
                h__ = 5 * h__ + resourceFolderName.GetHashCode();
            }
            if(resourcePath != null)
            {
                h__ = 5 * h__ + resourcePath.GetHashCode();
            }
            return h__;
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public override bool Equals(object other__)
        {
            if(object.ReferenceEquals(this, other__))
            {
                return true;
            }
            if(other__ == null)
            {
                return false;
            }
            if(GetType() != other__.GetType())
            {
                return false;
            }
            ResourceItem o__ = (ResourceItem)other__;
            if(resourceFolderName == null)
            {
                if(o__.resourceFolderName != null)
                {
                    return false;
                }
            }
            else
            {
                if(!resourceFolderName.Equals(o__.resourceFolderName))
                {
                    return false;
                }
            }
            if(resourcePath == null)
            {
                if(o__.resourcePath != null)
                {
                    return false;
                }
            }
            else
            {
                if(!resourcePath.Equals(o__.resourcePath))
                {
                    return false;
                }
            }
            return true;
        }

        #endregion

        #region Comparison members

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static bool operator==(ResourceItem lhs__, ResourceItem rhs__)
        {
            return Equals(lhs__, rhs__);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public static bool operator!=(ResourceItem lhs__, ResourceItem rhs__)
        {
            return !Equals(lhs__, rhs__);
        }

        #endregion

        #region Marshalling support

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public void write__(IceInternal.BasicStream os__)
        {
            os__.writeString(resourceFolderName);
            os__.writeString(resourcePath);
        }

        [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
        public void read__(IceInternal.BasicStream is__)
        {
            resourceFolderName = is__.readString();
            resourcePath = is__.readString();
        }

        #endregion
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public enum UpdateType
    {
        Other,
        Client,
        Server
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1704")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1707")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1709")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1710")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1711")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1715")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1716")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1720")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1722")]
    [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Naming", "CA1724")]
    public partial interface IUpdate : Ice.Object, IUpdateOperations_, IUpdateOperationsNC_
    {
    }
}

namespace ASSISTUPDATEMODULEICE
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_IUpdate_CheckUpdate(bool ret__, ASSISTUPDATEMODULEICE.ResourceItem[] list, long newSerialNumber, string error);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_IUpdate_QueryResource(bool ret__, long queryId, string error);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_IUpdate_GetResource(bool ret__, byte[] data, string error);

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public delegate void Callback_IUpdate_CloseResource(bool ret__, string error);
}

namespace ASSISTUPDATEMODULEICE
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface IUpdatePrx : Ice.ObjectPrx
    {
        bool CheckUpdate(long localSerialNumber, ASSISTUPDATEMODULEICE.UpdateType type, out ASSISTUPDATEMODULEICE.ResourceItem[] list, out long newSerialNumber, out string error);
        bool CheckUpdate(long localSerialNumber, ASSISTUPDATEMODULEICE.UpdateType type, out ASSISTUPDATEMODULEICE.ResourceItem[] list, out long newSerialNumber, out string error, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<ASSISTUPDATEMODULEICE.Callback_IUpdate_CheckUpdate> begin_CheckUpdate(long localSerialNumber, ASSISTUPDATEMODULEICE.UpdateType type);
        Ice.AsyncResult<ASSISTUPDATEMODULEICE.Callback_IUpdate_CheckUpdate> begin_CheckUpdate(long localSerialNumber, ASSISTUPDATEMODULEICE.UpdateType type, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_CheckUpdate(long localSerialNumber, ASSISTUPDATEMODULEICE.UpdateType type, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_CheckUpdate(long localSerialNumber, ASSISTUPDATEMODULEICE.UpdateType type, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        bool end_CheckUpdate(out ASSISTUPDATEMODULEICE.ResourceItem[] list, out long newSerialNumber, out string error, Ice.AsyncResult r__);

        bool QueryResource(ASSISTUPDATEMODULEICE.UpdateType type, ASSISTUPDATEMODULEICE.ResourceItem item, out long queryId, out string error);
        bool QueryResource(ASSISTUPDATEMODULEICE.UpdateType type, ASSISTUPDATEMODULEICE.ResourceItem item, out long queryId, out string error, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<ASSISTUPDATEMODULEICE.Callback_IUpdate_QueryResource> begin_QueryResource(ASSISTUPDATEMODULEICE.UpdateType type, ASSISTUPDATEMODULEICE.ResourceItem item);
        Ice.AsyncResult<ASSISTUPDATEMODULEICE.Callback_IUpdate_QueryResource> begin_QueryResource(ASSISTUPDATEMODULEICE.UpdateType type, ASSISTUPDATEMODULEICE.ResourceItem item, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_QueryResource(ASSISTUPDATEMODULEICE.UpdateType type, ASSISTUPDATEMODULEICE.ResourceItem item, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_QueryResource(ASSISTUPDATEMODULEICE.UpdateType type, ASSISTUPDATEMODULEICE.ResourceItem item, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        bool end_QueryResource(out long queryId, out string error, Ice.AsyncResult r__);

        bool GetResource(long queryId, int from, int count, out byte[] data, out string error);
        bool GetResource(long queryId, int from, int count, out byte[] data, out string error, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<ASSISTUPDATEMODULEICE.Callback_IUpdate_GetResource> begin_GetResource(long queryId, int from, int count);
        Ice.AsyncResult<ASSISTUPDATEMODULEICE.Callback_IUpdate_GetResource> begin_GetResource(long queryId, int from, int count, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_GetResource(long queryId, int from, int count, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_GetResource(long queryId, int from, int count, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        bool end_GetResource(out byte[] data, out string error, Ice.AsyncResult r__);

        bool CloseResource(long queryId, out string error);
        bool CloseResource(long queryId, out string error, _System.Collections.Generic.Dictionary<string, string> context__);

        Ice.AsyncResult<ASSISTUPDATEMODULEICE.Callback_IUpdate_CloseResource> begin_CloseResource(long queryId);
        Ice.AsyncResult<ASSISTUPDATEMODULEICE.Callback_IUpdate_CloseResource> begin_CloseResource(long queryId, _System.Collections.Generic.Dictionary<string, string> ctx__);

        Ice.AsyncResult begin_CloseResource(long queryId, Ice.AsyncCallback cb__, object cookie__);
        Ice.AsyncResult begin_CloseResource(long queryId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__);

        bool end_CloseResource(out string error, Ice.AsyncResult r__);
    }
}

namespace ASSISTUPDATEMODULEICE
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface IUpdateOperations_
    {
        void CheckUpdate_async(ASSISTUPDATEMODULEICE.AMD_IUpdate_CheckUpdate cb__, long localSerialNumber, ASSISTUPDATEMODULEICE.UpdateType type, Ice.Current current__);

        void QueryResource_async(ASSISTUPDATEMODULEICE.AMD_IUpdate_QueryResource cb__, ASSISTUPDATEMODULEICE.UpdateType type, ASSISTUPDATEMODULEICE.ResourceItem item, Ice.Current current__);

        void GetResource_async(ASSISTUPDATEMODULEICE.AMD_IUpdate_GetResource cb__, long queryId, int from, int count, Ice.Current current__);

        void CloseResource_async(ASSISTUPDATEMODULEICE.AMD_IUpdate_CloseResource cb__, long queryId, Ice.Current current__);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface IUpdateOperationsNC_
    {
        void CheckUpdate_async(ASSISTUPDATEMODULEICE.AMD_IUpdate_CheckUpdate cb__, long localSerialNumber, ASSISTUPDATEMODULEICE.UpdateType type);

        void QueryResource_async(ASSISTUPDATEMODULEICE.AMD_IUpdate_QueryResource cb__, ASSISTUPDATEMODULEICE.UpdateType type, ASSISTUPDATEMODULEICE.ResourceItem item);

        void GetResource_async(ASSISTUPDATEMODULEICE.AMD_IUpdate_GetResource cb__, long queryId, int from, int count);

        void CloseResource_async(ASSISTUPDATEMODULEICE.AMD_IUpdate_CloseResource cb__, long queryId);
    }
}

namespace ASSISTUPDATEMODULEICE
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class ResourceHelper
    {
        public static void write(IceInternal.BasicStream os__, byte[] v__)
        {
            os__.writeByteSeq(v__);
        }

        public static byte[] read(IceInternal.BasicStream is__)
        {
            byte[] v__;
            v__ = is__.readByteSeq();
            return v__;
        }
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class ResourceListHelper
    {
        public static void write(IceInternal.BasicStream os__, ASSISTUPDATEMODULEICE.ResourceItem[] v__)
        {
            if(v__ == null)
            {
                os__.writeSize(0);
            }
            else
            {
                os__.writeSize(v__.Length);
                for(int ix__ = 0; ix__ < v__.Length; ++ix__)
                {
                    (v__[ix__] == null ? new ASSISTUPDATEMODULEICE.ResourceItem() : v__[ix__]).write__(os__);
                }
            }
        }

        public static ASSISTUPDATEMODULEICE.ResourceItem[] read(IceInternal.BasicStream is__)
        {
            ASSISTUPDATEMODULEICE.ResourceItem[] v__;
            {
                int szx__ = is__.readAndCheckSeqSize(2);
                v__ = new ASSISTUPDATEMODULEICE.ResourceItem[szx__];
                for(int ix__ = 0; ix__ < szx__; ++ix__)
                {
                    v__[ix__] = new ASSISTUPDATEMODULEICE.ResourceItem();
                    v__[ix__].read__(is__);
                }
            }
            return v__;
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class IUpdatePrxHelper : Ice.ObjectPrxHelperBase, IUpdatePrx
    {
        #region Synchronous operations

        public bool CheckUpdate(long localSerialNumber, ASSISTUPDATEMODULEICE.UpdateType type, out ASSISTUPDATEMODULEICE.ResourceItem[] list, out long newSerialNumber, out string error)
        {
            return CheckUpdate(localSerialNumber, type, out list, out newSerialNumber, out error, null, false);
        }

        public bool CheckUpdate(long localSerialNumber, ASSISTUPDATEMODULEICE.UpdateType type, out ASSISTUPDATEMODULEICE.ResourceItem[] list, out long newSerialNumber, out string error, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return CheckUpdate(localSerialNumber, type, out list, out newSerialNumber, out error, context__, true);
        }

        private bool CheckUpdate(long localSerialNumber, ASSISTUPDATEMODULEICE.UpdateType type, out ASSISTUPDATEMODULEICE.ResourceItem[] list, out long newSerialNumber, out string error, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("CheckUpdate");
                    delBase__ = getDelegate__(false);
                    IUpdateDel_ del__ = (IUpdateDel_)delBase__;
                    return del__.CheckUpdate(localSerialNumber, type, out list, out newSerialNumber, out error, context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public bool CloseResource(long queryId, out string error)
        {
            return CloseResource(queryId, out error, null, false);
        }

        public bool CloseResource(long queryId, out string error, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return CloseResource(queryId, out error, context__, true);
        }

        private bool CloseResource(long queryId, out string error, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("CloseResource");
                    delBase__ = getDelegate__(false);
                    IUpdateDel_ del__ = (IUpdateDel_)delBase__;
                    return del__.CloseResource(queryId, out error, context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public bool GetResource(long queryId, int from, int count, out byte[] data, out string error)
        {
            return GetResource(queryId, from, count, out data, out error, null, false);
        }

        public bool GetResource(long queryId, int from, int count, out byte[] data, out string error, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return GetResource(queryId, from, count, out data, out error, context__, true);
        }

        private bool GetResource(long queryId, int from, int count, out byte[] data, out string error, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("GetResource");
                    delBase__ = getDelegate__(false);
                    IUpdateDel_ del__ = (IUpdateDel_)delBase__;
                    return del__.GetResource(queryId, from, count, out data, out error, context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        public bool QueryResource(ASSISTUPDATEMODULEICE.UpdateType type, ASSISTUPDATEMODULEICE.ResourceItem item, out long queryId, out string error)
        {
            return QueryResource(type, item, out queryId, out error, null, false);
        }

        public bool QueryResource(ASSISTUPDATEMODULEICE.UpdateType type, ASSISTUPDATEMODULEICE.ResourceItem item, out long queryId, out string error, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            return QueryResource(type, item, out queryId, out error, context__, true);
        }

        private bool QueryResource(ASSISTUPDATEMODULEICE.UpdateType type, ASSISTUPDATEMODULEICE.ResourceItem item, out long queryId, out string error, _System.Collections.Generic.Dictionary<string, string> context__, bool explicitContext__)
        {
            if(explicitContext__ && context__ == null)
            {
                context__ = emptyContext_;
            }
            int cnt__ = 0;
            while(true)
            {
                Ice.ObjectDel_ delBase__ = null;
                try
                {
                    checkTwowayOnly__("QueryResource");
                    delBase__ = getDelegate__(false);
                    IUpdateDel_ del__ = (IUpdateDel_)delBase__;
                    return del__.QueryResource(type, item, out queryId, out error, context__);
                }
                catch(IceInternal.LocalExceptionWrapper ex__)
                {
                    handleExceptionWrapper__(delBase__, ex__);
                }
                catch(Ice.LocalException ex__)
                {
                    handleException__(delBase__, ex__, true, ref cnt__);
                }
            }
        }

        #endregion

        #region Asynchronous operations

        public Ice.AsyncResult<ASSISTUPDATEMODULEICE.Callback_IUpdate_CheckUpdate> begin_CheckUpdate(long localSerialNumber, ASSISTUPDATEMODULEICE.UpdateType type)
        {
            return begin_CheckUpdate(localSerialNumber, type, null, false, null, null);
        }

        public Ice.AsyncResult<ASSISTUPDATEMODULEICE.Callback_IUpdate_CheckUpdate> begin_CheckUpdate(long localSerialNumber, ASSISTUPDATEMODULEICE.UpdateType type, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_CheckUpdate(localSerialNumber, type, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_CheckUpdate(long localSerialNumber, ASSISTUPDATEMODULEICE.UpdateType type, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_CheckUpdate(localSerialNumber, type, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_CheckUpdate(long localSerialNumber, ASSISTUPDATEMODULEICE.UpdateType type, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_CheckUpdate(localSerialNumber, type, ctx__, true, cb__, cookie__);
        }

        private const string __CheckUpdate_name = "CheckUpdate";

        public bool end_CheckUpdate(out ASSISTUPDATEMODULEICE.ResourceItem[] list, out long newSerialNumber, out string error, Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __CheckUpdate_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            bool ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            {
                int szx__ = is__.readAndCheckSeqSize(2);
                list = new ASSISTUPDATEMODULEICE.ResourceItem[szx__];
                for(int ix__ = 0; ix__ < szx__; ++ix__)
                {
                    list[ix__] = new ASSISTUPDATEMODULEICE.ResourceItem();
                    list[ix__].read__(is__);
                }
            }
            newSerialNumber = is__.readLong();
            error = is__.readString();
            ret__ = is__.readBool();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<ASSISTUPDATEMODULEICE.Callback_IUpdate_CheckUpdate> begin_CheckUpdate(long localSerialNumber, ASSISTUPDATEMODULEICE.UpdateType type, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__CheckUpdate_name);
            IceInternal.TwowayOutgoingAsync<ASSISTUPDATEMODULEICE.Callback_IUpdate_CheckUpdate> result__ =  new IceInternal.TwowayOutgoingAsync<ASSISTUPDATEMODULEICE.Callback_IUpdate_CheckUpdate>(this, __CheckUpdate_name, CheckUpdate_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__CheckUpdate_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeLong(localSerialNumber);
                os__.writeByte((byte)type, 3);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void CheckUpdate_completed__(Ice.AsyncResult r__, ASSISTUPDATEMODULEICE.Callback_IUpdate_CheckUpdate cb__, Ice.ExceptionCallback excb__)
        {
            ASSISTUPDATEMODULEICE.ResourceItem[] list;
            long newSerialNumber;
            string error;
            bool ret__;
            try
            {
                ret__ = end_CheckUpdate(out list, out newSerialNumber, out error, r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__, list, newSerialNumber, error);
            }
        }

        public Ice.AsyncResult<ASSISTUPDATEMODULEICE.Callback_IUpdate_CloseResource> begin_CloseResource(long queryId)
        {
            return begin_CloseResource(queryId, null, false, null, null);
        }

        public Ice.AsyncResult<ASSISTUPDATEMODULEICE.Callback_IUpdate_CloseResource> begin_CloseResource(long queryId, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_CloseResource(queryId, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_CloseResource(long queryId, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_CloseResource(queryId, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_CloseResource(long queryId, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_CloseResource(queryId, ctx__, true, cb__, cookie__);
        }

        private const string __CloseResource_name = "CloseResource";

        public bool end_CloseResource(out string error, Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __CloseResource_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            bool ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            error = is__.readString();
            ret__ = is__.readBool();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<ASSISTUPDATEMODULEICE.Callback_IUpdate_CloseResource> begin_CloseResource(long queryId, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__CloseResource_name);
            IceInternal.TwowayOutgoingAsync<ASSISTUPDATEMODULEICE.Callback_IUpdate_CloseResource> result__ =  new IceInternal.TwowayOutgoingAsync<ASSISTUPDATEMODULEICE.Callback_IUpdate_CloseResource>(this, __CloseResource_name, CloseResource_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__CloseResource_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeLong(queryId);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void CloseResource_completed__(Ice.AsyncResult r__, ASSISTUPDATEMODULEICE.Callback_IUpdate_CloseResource cb__, Ice.ExceptionCallback excb__)
        {
            string error;
            bool ret__;
            try
            {
                ret__ = end_CloseResource(out error, r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__, error);
            }
        }

        public Ice.AsyncResult<ASSISTUPDATEMODULEICE.Callback_IUpdate_GetResource> begin_GetResource(long queryId, int from, int count)
        {
            return begin_GetResource(queryId, from, count, null, false, null, null);
        }

        public Ice.AsyncResult<ASSISTUPDATEMODULEICE.Callback_IUpdate_GetResource> begin_GetResource(long queryId, int from, int count, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_GetResource(queryId, from, count, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_GetResource(long queryId, int from, int count, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_GetResource(queryId, from, count, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_GetResource(long queryId, int from, int count, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_GetResource(queryId, from, count, ctx__, true, cb__, cookie__);
        }

        private const string __GetResource_name = "GetResource";

        public bool end_GetResource(out byte[] data, out string error, Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __GetResource_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            bool ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            data = is__.readByteSeq();
            error = is__.readString();
            ret__ = is__.readBool();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<ASSISTUPDATEMODULEICE.Callback_IUpdate_GetResource> begin_GetResource(long queryId, int from, int count, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__GetResource_name);
            IceInternal.TwowayOutgoingAsync<ASSISTUPDATEMODULEICE.Callback_IUpdate_GetResource> result__ =  new IceInternal.TwowayOutgoingAsync<ASSISTUPDATEMODULEICE.Callback_IUpdate_GetResource>(this, __GetResource_name, GetResource_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__GetResource_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeLong(queryId);
                os__.writeInt(from);
                os__.writeInt(count);
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void GetResource_completed__(Ice.AsyncResult r__, ASSISTUPDATEMODULEICE.Callback_IUpdate_GetResource cb__, Ice.ExceptionCallback excb__)
        {
            byte[] data;
            string error;
            bool ret__;
            try
            {
                ret__ = end_GetResource(out data, out error, r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__, data, error);
            }
        }

        public Ice.AsyncResult<ASSISTUPDATEMODULEICE.Callback_IUpdate_QueryResource> begin_QueryResource(ASSISTUPDATEMODULEICE.UpdateType type, ASSISTUPDATEMODULEICE.ResourceItem item)
        {
            return begin_QueryResource(type, item, null, false, null, null);
        }

        public Ice.AsyncResult<ASSISTUPDATEMODULEICE.Callback_IUpdate_QueryResource> begin_QueryResource(ASSISTUPDATEMODULEICE.UpdateType type, ASSISTUPDATEMODULEICE.ResourceItem item, _System.Collections.Generic.Dictionary<string, string> ctx__)
        {
            return begin_QueryResource(type, item, ctx__, true, null, null);
        }

        public Ice.AsyncResult begin_QueryResource(ASSISTUPDATEMODULEICE.UpdateType type, ASSISTUPDATEMODULEICE.ResourceItem item, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_QueryResource(type, item, null, false, cb__, cookie__);
        }

        public Ice.AsyncResult begin_QueryResource(ASSISTUPDATEMODULEICE.UpdateType type, ASSISTUPDATEMODULEICE.ResourceItem item, _System.Collections.Generic.Dictionary<string, string> ctx__, Ice.AsyncCallback cb__, object cookie__)
        {
            return begin_QueryResource(type, item, ctx__, true, cb__, cookie__);
        }

        private const string __QueryResource_name = "QueryResource";

        public bool end_QueryResource(out long queryId, out string error, Ice.AsyncResult r__)
        {
            IceInternal.OutgoingAsync outAsync__ = (IceInternal.OutgoingAsync)r__;
            IceInternal.OutgoingAsync.check__(outAsync__, this, __QueryResource_name);
            if(!outAsync__.wait__())
            {
                try
                {
                    outAsync__.throwUserException__();
                }
                catch(Ice.UserException ex__)
                {
                    throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                }
            }
            bool ret__;
            IceInternal.BasicStream is__ = outAsync__.istr__;
            is__.startReadEncaps();
            queryId = is__.readLong();
            error = is__.readString();
            ret__ = is__.readBool();
            is__.endReadEncaps();
            return ret__;
        }

        private Ice.AsyncResult<ASSISTUPDATEMODULEICE.Callback_IUpdate_QueryResource> begin_QueryResource(ASSISTUPDATEMODULEICE.UpdateType type, ASSISTUPDATEMODULEICE.ResourceItem item, _System.Collections.Generic.Dictionary<string, string> ctx__, bool explicitContext__, Ice.AsyncCallback cb__, object cookie__)
        {
            checkAsyncTwowayOnly__(__QueryResource_name);
            IceInternal.TwowayOutgoingAsync<ASSISTUPDATEMODULEICE.Callback_IUpdate_QueryResource> result__ =  new IceInternal.TwowayOutgoingAsync<ASSISTUPDATEMODULEICE.Callback_IUpdate_QueryResource>(this, __QueryResource_name, QueryResource_completed__, cookie__);
            if(cb__ != null)
            {
                result__.whenCompletedWithAsyncCallback(cb__);
            }
            try
            {
                result__.prepare__(__QueryResource_name, Ice.OperationMode.Normal, ctx__, explicitContext__);
                IceInternal.BasicStream os__ = result__.ostr__;
                os__.writeByte((byte)type, 3);
                if(item == null)
                {
                    ASSISTUPDATEMODULEICE.ResourceItem tmp__ = new ASSISTUPDATEMODULEICE.ResourceItem();
                    tmp__.write__(os__);
                }
                else
                {
                    item.write__(os__);
                }
                os__.endWriteEncaps();
                result__.send__(true);
            }
            catch(Ice.LocalException ex__)
            {
                result__.exceptionAsync__(ex__);
            }
            return result__;
        }

        private void QueryResource_completed__(Ice.AsyncResult r__, ASSISTUPDATEMODULEICE.Callback_IUpdate_QueryResource cb__, Ice.ExceptionCallback excb__)
        {
            long queryId;
            string error;
            bool ret__;
            try
            {
                ret__ = end_QueryResource(out queryId, out error, r__);
            }
            catch(Ice.Exception ex__)
            {
                if(excb__ != null)
                {
                    excb__(ex__);
                }
                return;
            }
            if(cb__ != null)
            {
                cb__(ret__, queryId, error);
            }
        }

        #endregion

        #region Checked and unchecked cast operations

        public static IUpdatePrx checkedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            IUpdatePrx r = b as IUpdatePrx;
            if((r == null) && b.ice_isA(ice_staticId()))
            {
                IUpdatePrxHelper h = new IUpdatePrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static IUpdatePrx checkedCast(Ice.ObjectPrx b, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            IUpdatePrx r = b as IUpdatePrx;
            if((r == null) && b.ice_isA(ice_staticId(), ctx))
            {
                IUpdatePrxHelper h = new IUpdatePrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static IUpdatePrx checkedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId()))
                {
                    IUpdatePrxHelper h = new IUpdatePrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static IUpdatePrx checkedCast(Ice.ObjectPrx b, string f, _System.Collections.Generic.Dictionary<string, string> ctx)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            try
            {
                if(bb.ice_isA(ice_staticId(), ctx))
                {
                    IUpdatePrxHelper h = new IUpdatePrxHelper();
                    h.copyFrom__(bb);
                    return h;
                }
            }
            catch(Ice.FacetNotExistException)
            {
            }
            return null;
        }

        public static IUpdatePrx uncheckedCast(Ice.ObjectPrx b)
        {
            if(b == null)
            {
                return null;
            }
            IUpdatePrx r = b as IUpdatePrx;
            if(r == null)
            {
                IUpdatePrxHelper h = new IUpdatePrxHelper();
                h.copyFrom__(b);
                r = h;
            }
            return r;
        }

        public static IUpdatePrx uncheckedCast(Ice.ObjectPrx b, string f)
        {
            if(b == null)
            {
                return null;
            }
            Ice.ObjectPrx bb = b.ice_facet(f);
            IUpdatePrxHelper h = new IUpdatePrxHelper();
            h.copyFrom__(bb);
            return h;
        }

        public static readonly string[] ids__ =
        {
            "::ASSISTUPDATEMODULEICE::IUpdate",
            "::Ice::Object"
        };

        public static string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Marshaling support

        protected override Ice.ObjectDelM_ createDelegateM__()
        {
            return new IUpdateDelM_();
        }

        protected override Ice.ObjectDelD_ createDelegateD__()
        {
            return new IUpdateDelD_();
        }

        public static void write__(IceInternal.BasicStream os__, IUpdatePrx v__)
        {
            os__.writeProxy(v__);
        }

        public static IUpdatePrx read__(IceInternal.BasicStream is__)
        {
            Ice.ObjectPrx proxy = is__.readProxy();
            if(proxy != null)
            {
                IUpdatePrxHelper result = new IUpdatePrxHelper();
                result.copyFrom__(proxy);
                return result;
            }
            return null;
        }

        #endregion
    }
}

namespace ASSISTUPDATEMODULEICE
{
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface IUpdateDel_ : Ice.ObjectDel_
    {
        bool CheckUpdate(long localSerialNumber, ASSISTUPDATEMODULEICE.UpdateType type, out ASSISTUPDATEMODULEICE.ResourceItem[] list, out long newSerialNumber, out string error, _System.Collections.Generic.Dictionary<string, string> context__);

        bool QueryResource(ASSISTUPDATEMODULEICE.UpdateType type, ASSISTUPDATEMODULEICE.ResourceItem item, out long queryId, out string error, _System.Collections.Generic.Dictionary<string, string> context__);

        bool GetResource(long queryId, int from, int count, out byte[] data, out string error, _System.Collections.Generic.Dictionary<string, string> context__);

        bool CloseResource(long queryId, out string error, _System.Collections.Generic.Dictionary<string, string> context__);
    }
}

namespace ASSISTUPDATEMODULEICE
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class IUpdateDelM_ : Ice.ObjectDelM_, IUpdateDel_
    {
        public bool CheckUpdate(long localSerialNumber, ASSISTUPDATEMODULEICE.UpdateType type, out ASSISTUPDATEMODULEICE.ResourceItem[] list, out long newSerialNumber, out string error, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("CheckUpdate", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeLong(localSerialNumber);
                    os__.writeByte((byte)type, 3);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    {
                        int szx__ = is__.readAndCheckSeqSize(2);
                        list = new ASSISTUPDATEMODULEICE.ResourceItem[szx__];
                        for(int ix__ = 0; ix__ < szx__; ++ix__)
                        {
                            list[ix__] = new ASSISTUPDATEMODULEICE.ResourceItem();
                            list[ix__].read__(is__);
                        }
                    }
                    newSerialNumber = is__.readLong();
                    error = is__.readString();
                    bool ret__;
                    ret__ = is__.readBool();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public bool CloseResource(long queryId, out string error, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("CloseResource", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeLong(queryId);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    error = is__.readString();
                    bool ret__;
                    ret__ = is__.readBool();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public bool GetResource(long queryId, int from, int count, out byte[] data, out string error, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("GetResource", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeLong(queryId);
                    os__.writeInt(from);
                    os__.writeInt(count);
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    data = is__.readByteSeq();
                    error = is__.readString();
                    bool ret__;
                    ret__ = is__.readBool();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }

        public bool QueryResource(ASSISTUPDATEMODULEICE.UpdateType type, ASSISTUPDATEMODULEICE.ResourceItem item, out long queryId, out string error, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            IceInternal.Outgoing og__ = handler__.getOutgoing("QueryResource", Ice.OperationMode.Normal, context__);
            try
            {
                try
                {
                    IceInternal.BasicStream os__ = og__.ostr();
                    os__.writeByte((byte)type, 3);
                    if(item == null)
                    {
                        ASSISTUPDATEMODULEICE.ResourceItem tmp__ = new ASSISTUPDATEMODULEICE.ResourceItem();
                        tmp__.write__(os__);
                    }
                    else
                    {
                        item.write__(os__);
                    }
                }
                catch(Ice.LocalException ex__)
                {
                    og__.abort(ex__);
                }
                bool ok__ = og__.invoke();
                try
                {
                    if(!ok__)
                    {
                        try
                        {
                            og__.throwUserException();
                        }
                        catch(Ice.UserException ex__)
                        {
                            throw new Ice.UnknownUserException(ex__.ice_name(), ex__);
                        }
                    }
                    IceInternal.BasicStream is__ = og__.istr();
                    is__.startReadEncaps();
                    queryId = is__.readLong();
                    error = is__.readString();
                    bool ret__;
                    ret__ = is__.readBool();
                    is__.endReadEncaps();
                    return ret__;
                }
                catch(Ice.LocalException ex__)
                {
                    throw new IceInternal.LocalExceptionWrapper(ex__, false);
                }
            }
            finally
            {
                handler__.reclaimOutgoing(og__);
            }
        }
    }
}

namespace ASSISTUPDATEMODULEICE
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public sealed class IUpdateDelD_ : Ice.ObjectDelD_, IUpdateDel_
    {
        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public bool CheckUpdate(long localSerialNumber, ASSISTUPDATEMODULEICE.UpdateType type, out ASSISTUPDATEMODULEICE.ResourceItem[] list, out long newSerialNumber, out string error, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            throw new Ice.CollocationOptimizationException();
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public bool CloseResource(long queryId, out string error, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            throw new Ice.CollocationOptimizationException();
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public bool GetResource(long queryId, int from, int count, out byte[] data, out string error, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            throw new Ice.CollocationOptimizationException();
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1031")]
        public bool QueryResource(ASSISTUPDATEMODULEICE.UpdateType type, ASSISTUPDATEMODULEICE.ResourceItem item, out long queryId, out string error, _System.Collections.Generic.Dictionary<string, string> context__)
        {
            throw new Ice.CollocationOptimizationException();
        }
    }
}

namespace ASSISTUPDATEMODULEICE
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public abstract class IUpdateDisp_ : Ice.ObjectImpl, IUpdate
    {
        #region Slice operations

        public void CheckUpdate_async(ASSISTUPDATEMODULEICE.AMD_IUpdate_CheckUpdate cb__, long localSerialNumber, ASSISTUPDATEMODULEICE.UpdateType type)
        {
            CheckUpdate_async(cb__, localSerialNumber, type, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void CheckUpdate_async(ASSISTUPDATEMODULEICE.AMD_IUpdate_CheckUpdate cb__, long localSerialNumber, ASSISTUPDATEMODULEICE.UpdateType type, Ice.Current current__);

        public void QueryResource_async(ASSISTUPDATEMODULEICE.AMD_IUpdate_QueryResource cb__, ASSISTUPDATEMODULEICE.UpdateType type, ASSISTUPDATEMODULEICE.ResourceItem item)
        {
            QueryResource_async(cb__, type, item, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void QueryResource_async(ASSISTUPDATEMODULEICE.AMD_IUpdate_QueryResource cb__, ASSISTUPDATEMODULEICE.UpdateType type, ASSISTUPDATEMODULEICE.ResourceItem item, Ice.Current current__);

        public void GetResource_async(ASSISTUPDATEMODULEICE.AMD_IUpdate_GetResource cb__, long queryId, int from, int count)
        {
            GetResource_async(cb__, queryId, from, count, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void GetResource_async(ASSISTUPDATEMODULEICE.AMD_IUpdate_GetResource cb__, long queryId, int from, int count, Ice.Current current__);

        public void CloseResource_async(ASSISTUPDATEMODULEICE.AMD_IUpdate_CloseResource cb__, long queryId)
        {
            CloseResource_async(cb__, queryId, Ice.ObjectImpl.defaultCurrent);
        }

        public abstract void CloseResource_async(ASSISTUPDATEMODULEICE.AMD_IUpdate_CloseResource cb__, long queryId, Ice.Current current__);

        #endregion

        #region Slice type-related members

        public static new readonly string[] ids__ = 
        {
            "::ASSISTUPDATEMODULEICE::IUpdate",
            "::Ice::Object"
        };

        public override bool ice_isA(string s)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override bool ice_isA(string s, Ice.Current current__)
        {
            return _System.Array.BinarySearch(ids__, s, IceUtilInternal.StringUtil.OrdinalStringComparer) >= 0;
        }

        public override string[] ice_ids()
        {
            return ids__;
        }

        public override string[] ice_ids(Ice.Current current__)
        {
            return ids__;
        }

        public override string ice_id()
        {
            return ids__[0];
        }

        public override string ice_id(Ice.Current current__)
        {
            return ids__[0];
        }

        public static new string ice_staticId()
        {
            return ids__[0];
        }

        #endregion

        #region Operation dispatch

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus CheckUpdate___(IUpdate obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            long localSerialNumber;
            localSerialNumber = is__.readLong();
            ASSISTUPDATEMODULEICE.UpdateType type;
            type = (ASSISTUPDATEMODULEICE.UpdateType)is__.readByte(3);
            is__.endReadEncaps();
            AMD_IUpdate_CheckUpdate cb__ = new _AMD_IUpdate_CheckUpdate(inS__);
            try
            {
                obj__.CheckUpdate_async(cb__, localSerialNumber, type, current__);
            }
            catch(_System.Exception ex__)
            {
                cb__.ice_exception(ex__);
            }
            return Ice.DispatchStatus.DispatchAsync;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus QueryResource___(IUpdate obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            ASSISTUPDATEMODULEICE.UpdateType type;
            type = (ASSISTUPDATEMODULEICE.UpdateType)is__.readByte(3);
            ASSISTUPDATEMODULEICE.ResourceItem item;
            item = null;
            if(item == null)
            {
                item = new ASSISTUPDATEMODULEICE.ResourceItem();
            }
            item.read__(is__);
            is__.endReadEncaps();
            AMD_IUpdate_QueryResource cb__ = new _AMD_IUpdate_QueryResource(inS__);
            try
            {
                obj__.QueryResource_async(cb__, type, item, current__);
            }
            catch(_System.Exception ex__)
            {
                cb__.ice_exception(ex__);
            }
            return Ice.DispatchStatus.DispatchAsync;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus GetResource___(IUpdate obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            long queryId;
            queryId = is__.readLong();
            int from;
            from = is__.readInt();
            int count;
            count = is__.readInt();
            is__.endReadEncaps();
            AMD_IUpdate_GetResource cb__ = new _AMD_IUpdate_GetResource(inS__);
            try
            {
                obj__.GetResource_async(cb__, queryId, from, count, current__);
            }
            catch(_System.Exception ex__)
            {
                cb__.ice_exception(ex__);
            }
            return Ice.DispatchStatus.DispatchAsync;
        }

        [_System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
        public static Ice.DispatchStatus CloseResource___(IUpdate obj__, IceInternal.Incoming inS__, Ice.Current current__)
        {
            checkMode__(Ice.OperationMode.Normal, current__.mode);
            IceInternal.BasicStream is__ = inS__.istr();
            is__.startReadEncaps();
            long queryId;
            queryId = is__.readLong();
            is__.endReadEncaps();
            AMD_IUpdate_CloseResource cb__ = new _AMD_IUpdate_CloseResource(inS__);
            try
            {
                obj__.CloseResource_async(cb__, queryId, current__);
            }
            catch(_System.Exception ex__)
            {
                cb__.ice_exception(ex__);
            }
            return Ice.DispatchStatus.DispatchAsync;
        }

        private static string[] all__ =
        {
            "CheckUpdate",
            "CloseResource",
            "GetResource",
            "QueryResource",
            "ice_id",
            "ice_ids",
            "ice_isA",
            "ice_ping"
        };

        public override Ice.DispatchStatus dispatch__(IceInternal.Incoming inS__, Ice.Current current__)
        {
            int pos = _System.Array.BinarySearch(all__, current__.operation, IceUtilInternal.StringUtil.OrdinalStringComparer);
            if(pos < 0)
            {
                throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
            }

            switch(pos)
            {
                case 0:
                {
                    return CheckUpdate___(this, inS__, current__);
                }
                case 1:
                {
                    return CloseResource___(this, inS__, current__);
                }
                case 2:
                {
                    return GetResource___(this, inS__, current__);
                }
                case 3:
                {
                    return QueryResource___(this, inS__, current__);
                }
                case 4:
                {
                    return ice_id___(this, inS__, current__);
                }
                case 5:
                {
                    return ice_ids___(this, inS__, current__);
                }
                case 6:
                {
                    return ice_isA___(this, inS__, current__);
                }
                case 7:
                {
                    return ice_ping___(this, inS__, current__);
                }
            }

            _System.Diagnostics.Debug.Assert(false);
            throw new Ice.OperationNotExistException(current__.id, current__.facet, current__.operation);
        }

        #endregion

        #region Marshaling support

        public override void write__(IceInternal.BasicStream os__)
        {
            os__.writeTypeId(ice_staticId());
            os__.startWriteSlice();
            os__.endWriteSlice();
            base.write__(os__);
        }

        public override void read__(IceInternal.BasicStream is__, bool rid__)
        {
            if(rid__)
            {
                /* string myId = */ is__.readTypeId();
            }
            is__.startReadSlice();
            is__.endReadSlice();
            base.read__(is__, true);
        }

        public override void write__(Ice.OutputStream outS__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type ASSISTUPDATEMODULEICE::IUpdate was not generated with stream support";
            throw ex;
        }

        public override void read__(Ice.InputStream inS__, bool rid__)
        {
            Ice.MarshalException ex = new Ice.MarshalException();
            ex.reason = "type ASSISTUPDATEMODULEICE::IUpdate was not generated with stream support";
            throw ex;
        }

        #endregion
    }
}

namespace ASSISTUPDATEMODULEICE
{
    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface AMD_IUpdate_CheckUpdate : Ice.AMDCallback
    {
        void ice_response(bool ret__, ASSISTUPDATEMODULEICE.ResourceItem[] list, long newSerialNumber, string error);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    class _AMD_IUpdate_CheckUpdate : IceInternal.IncomingAsync, AMD_IUpdate_CheckUpdate
    {
        public _AMD_IUpdate_CheckUpdate(IceInternal.Incoming inc) : base(inc)
        {
        }

        public void ice_response(bool ret__, ASSISTUPDATEMODULEICE.ResourceItem[] list, long newSerialNumber, string error)
        {
            if(validateResponse__(true))
            {
                try
                {
                    IceInternal.BasicStream os__ = this.os__();
                    if(list == null)
                    {
                        os__.writeSize(0);
                    }
                    else
                    {
                        os__.writeSize(list.Length);
                        for(int ix__ = 0; ix__ < list.Length; ++ix__)
                        {
                            (list[ix__] == null ? new ASSISTUPDATEMODULEICE.ResourceItem() : list[ix__]).write__(os__);
                        }
                    }
                    os__.writeLong(newSerialNumber);
                    os__.writeString(error);
                    os__.writeBool(ret__);
                }
                catch(Ice.LocalException ex__)
                {
                    ice_exception(ex__);
                }
                response__(true);
            }
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface AMD_IUpdate_QueryResource : Ice.AMDCallback
    {
        void ice_response(bool ret__, long queryId, string error);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    class _AMD_IUpdate_QueryResource : IceInternal.IncomingAsync, AMD_IUpdate_QueryResource
    {
        public _AMD_IUpdate_QueryResource(IceInternal.Incoming inc) : base(inc)
        {
        }

        public void ice_response(bool ret__, long queryId, string error)
        {
            if(validateResponse__(true))
            {
                try
                {
                    IceInternal.BasicStream os__ = this.os__();
                    os__.writeLong(queryId);
                    os__.writeString(error);
                    os__.writeBool(ret__);
                }
                catch(Ice.LocalException ex__)
                {
                    ice_exception(ex__);
                }
                response__(true);
            }
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface AMD_IUpdate_GetResource : Ice.AMDCallback
    {
        void ice_response(bool ret__, byte[] data, string error);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    class _AMD_IUpdate_GetResource : IceInternal.IncomingAsync, AMD_IUpdate_GetResource
    {
        public _AMD_IUpdate_GetResource(IceInternal.Incoming inc) : base(inc)
        {
        }

        public void ice_response(bool ret__, byte[] data, string error)
        {
            if(validateResponse__(true))
            {
                try
                {
                    IceInternal.BasicStream os__ = this.os__();
                    os__.writeByteSeq(data);
                    os__.writeString(error);
                    os__.writeBool(ret__);
                }
                catch(Ice.LocalException ex__)
                {
                    ice_exception(ex__);
                }
                response__(true);
            }
        }
    }

    [_System.Runtime.InteropServices.ComVisible(false)]
    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    public interface AMD_IUpdate_CloseResource : Ice.AMDCallback
    {
        void ice_response(bool ret__, string error);
    }

    [_System.CodeDom.Compiler.GeneratedCodeAttribute("slice2cs", "3.4.2")]
    class _AMD_IUpdate_CloseResource : IceInternal.IncomingAsync, AMD_IUpdate_CloseResource
    {
        public _AMD_IUpdate_CloseResource(IceInternal.Incoming inc) : base(inc)
        {
        }

        public void ice_response(bool ret__, string error)
        {
            if(validateResponse__(true))
            {
                try
                {
                    IceInternal.BasicStream os__ = this.os__();
                    os__.writeString(error);
                    os__.writeBool(ret__);
                }
                catch(Ice.LocalException ex__)
                {
                    ice_exception(ex__);
                }
                response__(true);
            }
        }
    }
}
